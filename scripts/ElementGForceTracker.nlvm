package scripts;

import com.nolimitscoaster.SceneObjectElement;
import scripts.math.Matrix4x4;
import nlvm.math3d.Vector3f;
import nlvm.math3d.Vector4f;
import scripts.math.Mathf;

/// <class>
/// <desc>Proveds G-Force data for a SceneObjectElement.</desc>
public class ElementGForceTracker extends GForceTracker
{
    private SceneObjectElement m_TrackingElement = null;
    private Matrix4x4 m_ExposedMatrix = null;

    private Vector3f m_Forces = new Vector3f();
    private Vector3f m_Position = new Vector3f();

    /// <constructor>
    /// <desc>Creates a new tracker for a SceneObjectElement.</desc>
    /// <arg name="element">The SceneObjectElement to track G-Forces of.</arg>
    /// </constructor>
    public ElementGForceTracker(SceneObjectElement element)
    {
        super(new Matrix4x4());
        m_TrackingElement = element;
        m_ExposedMatrix = ExposeMatrix();
        m_ExposedMatrix.Set(Matrix4x4.FromNative(element.getAbsoluteMatrix()));
    }

    public void Update(float tick)
    {
        m_ExposedMatrix.Set(m_TrackingElement.getAbsoluteMatrix());
        super.Update(tick);

        GetAverageForce(m_Forces);
        m_Forces.mul(-0.5f);


        m_ExposedMatrix.GetPosition(m_Position);
        Vector3f a = new Vector3f(m_Position);
        a.add(m_Forces);
        Debug.DrawLine(m_Position, a, tick / 2, new Vector4f(Mathf.Abs(m_Forces.x), Mathf.Abs(m_Forces.y), Mathf.Abs(m_Forces.z), 1.0f));
    }
}
/// </class>