package scripts;

import com.nolimitscoaster.*;
import nlvm.math3d.*;

import scripts.core.*;
import scripts.core.particles.*;

public final class EmitterTest extends Behaviour
{
    private ParticleSystem m_ParticleSystem = null;

    private Matrix4x4f m_Matrix = new Matrix4x4f();
    private Train m_Train;

    public bool onInit()
    {
        bool success = super.onInit();
        if(!success) System.throwRuntimeException("Error in behaviour class");

        m_Train = sim.findNearestCoasterTrack(m_SceneObject.getTranslation(), 5.0f).getCoaster().findNearestTrain(m_SceneObject.getTranslation(), 5.0f);


        SceneObject particleGO = GetSceneObject("Particles", true);
        m_ParticleSystem = new ParticleSystem(particleGO);

        m_ParticleSystem.SetStartRotation(-25.f, 25.f);
        m_ParticleSystem.SetStartScale(0.2f, 0.6f);
        m_ParticleSystem.SetLifetime(2.f, 5.f);
        ParticleColor m_PColor = new ParticleColor(new Vector3f(1.0f, 0.0f, 1.0f), new Vector3f(0.0f, 1.0f, 0.0f));
        m_ParticleSystem.SetColorInterp(m_PColor);

        m_ParticleSystem.SetMatrixRef(m_Matrix);

        m_ParticleSystem.SetEmitterState(true);
        return true;
    }



    public void onNextFrame(float tick)
    {
        m_Train.getCarMatrix(6, m_Matrix);

        /*
        Matrix4x4f inverseOffset = m_AttachmentMatrix.dup();
        inverseOffset.invert();
        Matrix4x4f goalCopy = m_GoalMatrix.dup();

        goalCopy.multLeft(inverseOffset);
        m_ParticleElements[0].setMatrix(goalCopy);
        */
    }
}