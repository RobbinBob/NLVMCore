package scripts;

import nlvm.lang.*;
import nlvm.math3d.Vector3f;
import scripts.math.*;

/// <class>
/// <desc>Struct-like container for CoasterCar specific data.</desc>
public class CoasterCarDescriptor extends Object
{
    /// <member>
    /// <desc>The amount of restrains this car has.</desc>
    /// </member>
    public int Restraints = 0;
    /// <member>
    /// <desc>The amount of cameras this car has.</desc>
    /// </member>
    public int Cameras = 0;
    /// <member>
    /// <desc>The time(seconds) for the restraints to open.</desc>
    /// </member>
    public float RestraintOpenDuration = 1.0f;
    /// <member>
    /// <desc>The time(seconds) for the restraints to close.</desc>
    /// </member>
    public float RestraintCloseDuration = 1.0f;

    public Vector3 RestraintOpenAngle = Vector3.Zero;
    public Vector3 RestraintCloseAngle = Vector3.Zero;


    public Vector3f RearJointOffset = new Vector3f(0, 0, 0);
    public Vector3f FrontJointOffset = new Vector3f(0, 0, 0);
    public float CarLength = 0.0f;
    public float[] BogieOffsets = new float[0];

    public CoasterCarDescriptor() { }
}
/// </class>