package scripts;

/// <class>
/// <desc>Base type for recieving update events without extending Behaviour.</desc>
public abstract class UpdateableObject extends Object implements IUpdateable
{
    private bool m_IsRegistered = false;

    /// <method>
    /// <desc>Sets if this object should recieve update events.</desc>
    /// <arg name="shouldUpdate">True to recieve update events, False to cancel them.</arg>
    /// </method>
    protected final void SetShouldUpdate(bool shouldUpdate)
    {
        if(shouldUpdate)
        {
            if(!m_IsRegistered)
            {
                Behaviour.RegisterUpdateable(this);
                m_IsRegistered = true;
            }
        }
        else
        {
            if(m_IsRegistered)
            {
                Behaviour.RemoveUpdateable(this);
                m_IsRegistered = false;
            }
        }
    }
}
/// </class>